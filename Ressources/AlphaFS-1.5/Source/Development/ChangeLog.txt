Version 1.6
   * Mod: The public key of AlphaFS.dll has changed. (Delay-signing is no longer used);
   * Numerous bugfixes and optimizations;
   * Mod: Property Volume.Serialnumber now returns as a hexadecimal-string, instead of number-long;
   * Mod: Directory.GetParent() returns DirectoryInfo() object instead of string, as per .NET specification;
   * Mod: Directory.CreateDirectory() returns DirectoryInfo() object instead of void, as per .NET specification;
   * Mod: Classes Directory() and DirectoryInfo()
	      Renamed .EnableEncryption to: .EncryptionEnable and .DisableEncryption to: .EncryptionDisable;
          Renamed .EnableCompression to: .CompressionEnable and .DisableCompression to: .CompressionDisable;
   * Mod: DirectoryInfo() and FileInfo() instance creation does not check if file/folder exists, are per .NET specification;
   * Mod: DirectoryInfo() and FileInfo() are now LazyLoading;
   * Mod: Renamed enum: "FileSystemAttributes" to: "VolumeInfoAttributes";
   * Mod: Made date-related properties consistent of classes: ByHandleFileInfo(), FileIdBothDirectoryInfo() and FileSystemEntryInfo();
   * Mod: Corrected field: FileIdBothDirectoryInfo.LastWriteTime;
   * Mod: Enabled property: LargeCache for method: FileSystemEntryEnumerator.MoveNext() on Win7+;
   * Mod: Removed obsolete VolumeInfo() properties;
   * Mod: Changed method: FileSystemInfo.GetFileSystemEntryInfoInternal(): will now populate property: FullPath;
   * New: More Unit Tests;
   * New: LongPaths will automatically be applied internally for all Win32 API functions that support it, no need to worry about this anymore.
   * New: Added namespace: AlphaFS.Net;
   * New: Added Class: Host();
   * New: Added Class: Shell32();
   * New: Added Class: DriveInfo();
   * New: Added .NET 4 all file system EnumerateXXX() methods to Directory() and DirectoryInfo() classes;
   * New: Added .NET 4 method: Directory.GetLogicalDrives();
   * New: Added methods Encrypt() and Decrypt() to classes Directory() and DirectoryInfo();
   * New: Added method: EnumerateStreams() to classes: BackupFileStream(), File(), FileInfo(), Directory() and DirectoryInfo();
   * New: Added method: Volume.IsSame() to check if two filesystem objects reside on the same Volume;
   * New: Added TxF constructor to class DirectoryInfo() and changed applicable methods to call the TxF methods;
   * New: Added TxF constructor to class FileInfo() and changed applicable methods to call the TxF methods;
   * New: Added method: File.GetStreamsSize() to retrieve the number of bytes used by Alternate Data Streams;
   * New: Added property: FileInfo().LengthStreams to retrieve the number of bytes used by Alternate Data Streams;
   * New: Added property: FileInfo().LengthCompressed the actual number of bytes of disk storage used to store a specified file.
   * New: Added "Cached LazyLoading" to class: FileSystemInfo() improving performance for classes: DirectoryInfo() and FileInfo();
   * New: Implemented new VolumeInfo() constructor using object Initializer;
   * New: Added public method: VolumeInfo.ToString();
   * New: Added public readonly property: VolumeInfo.FullPath;
   * New: Added public readonly property: VolumeInfo.Guid;

Version 1.5
   * New: Various file system objects enumeration methods in Directory class.
   * Numerous bugfixes and optimizations
   * New: more unit tests
   * New: VS 2010 help file format, aka Help Viewer 1, dumped MS HELP 2 format

Version 1.0
  * New: Directory.GetFileIdBothDirectoryInfo, which provides access to the GetFileInformationByHandleEx Win32 API 
         function with the FileInformationClass set to FileIdBothDirectoryInfo.
  * New: Directory.CountFiles
  * Mod: Additional overloads for File.Open method.
  * Mod: FileAttributes.Invalid flag removed.
  * New: Directory.GetProperties method for retrieving aggregated information about files in a directory.

Version 1.0 Beta
  * New: File.GetFileInformationByHandle added providing information about file index and link count.
  * New: KernelTransaction can now be created from a System.Transaction to participate in the ambient transaction
  * New: File.GetHardlinks providing an enumeration about all hardlinks pointing to the same file.
  * Mod: Many improvements and bug-fixes to Path/PathInfo path-parsing.
  * Mod: More functions for manipulating timestamps on files and directories.
  * Mod: Directory.GetFullFileSystemEntries added to provide more convenient usage of the FileSystemEnumerator.
  * Mod: ... and many more minor changes and fixes.

Version 0.7 alpha
  * New: DirectoryInfo and FileInfo classes added
  * New: PathInfo.GetLongFullPath() and Path.GetLongFullPath() methods added
  * Mod: Path and PathInfo got many bugfixes, and some new functionality was added.
  * Mod: AlphaFS now targets the .NET Framework 2.0 instead of 3.5 previously.
  * Mod: KernelTransaction can now be created from, and participate in a System.Transactions.Transaction.
  * New: BackupFileStream added, in support of the BackupWrite(), BackupRead() and BackupSeek() functions from the Win32 API.
  * Mod: Inheritance structure for several classes was modified, mainly to add MarshalByRefObject to the relevant classes.
  * Mod: FileSystemEntryInfo was changed to a reference type (class) instead of the previous value type (struct).
  * Mod: PathInfo now accepts more types of internal paths, such as \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy5\ etc.
  * ... and many minor changes and fixes, not mentioned here.

Version 0.3.1    2008-08-18
  * New: Added support for hardlinks and symbolic links in File.
  * New: Added Directory.EnableEncryption() and Directory.DisableEncryption()
  * New: Added File.GetCompressedSize()
  * Mod: Applied CLSCompliant(false) to the assembly
  * Mod: Improved error reporting, and cleanup of internal class NativeError.
  
Version 0.3.0    2008-08-17
  * Initial release
  