<?xml version="1.0" encoding="utf-8"?>
<topic id="BD064C3D-8C26-4418-8D6E-B7D5A50861E3" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
         The Volume Shadow Copy Service (VSS) is a set of COM interfaces, delivered with various versions of 
         <application>Microsoft Windows</application>, that implements a framework to allow volume backups 
         to be performed while applications on a system continue to write to the volumes.
      </para>
      <para>AlphaVSS is a .NET class library written in C++/CLI aiming to provide a managed interface to this API. 
      The goal is to provide an interface that is simple to use from a C# or VB.NET application, 
      yet providing the full functionality of VSS.</para>
    </introduction>
    <section address="Background">
      <title>Introduction</title>
      <content>
         <para>
            Using the Windows Volume Shadow Copy Service (VSS) on the .NET platform in C# (or VB) is somewhat problematic to say the least. 
            There are numerous posts online about this issue, neither ever mentioning a robust solution that would allow full access to 
            the VSS API from within a .NET application. The reasons are actually somewhat unclear, but it seems to have to do with there being
            COM interfaces without an IID, and also that several interfaces of the VSS API is not actually COM interfaces but rather 
            C++ interfaces. This means there is no type library available for importing in your .NET application, and creating such a thing
            seems to not be possible.  As mentioned there are several discussions on various forums available online on this topic so this 
            will not be covered in more detail in this manual.
         </para>
         <para>
            The only viable solution to this problem seems to be to write a custom wrapper in managed C++/CLI, that provides a 
            managed interface to the VSS API that can be used from .NET and C#. The number of interfaces, structures and functions
            in the Volume Shadow Copy API is quite large however, and writing a complete wrapper for all of this is not an attractive 
            undertaking as part of your application development.           
         </para>
         <para>
            Another issue is that there are several versions of VSS depending on what version of <application>Microsoft Windows</application>
            you are running and for which platform it is targeted. These versions unfortunately are not fully compatible with each other, 
            but require linking against different .LIB-files and compiling against a different set of C++ .H-files.
         </para>
         <para>
            AlphaVSS is a library released under the MIT license written to remedy this situation and allow easy access to the full VSS API 
            from within a managed C# or VB.NET application targeting the <application>Microsoft Windows</application> operating system.
         </para>
         <para>
            AlphaVSS duplicates the original VSS API quite closely, but some things have been changed to conform more to the 
            .NET way of doing things. The following is a brief summary of some of the differences:
         </para>
         <list class="bullet">
            <listItem>
               <para>
                  Most of the interfaces from the VSS API are exposed as classes in AlphaVSS. So IVssSnapshotProp becomes VssSnapshotProp 
                  and so on.
               </para>
            </listItem>
            <listItem>
               <para>
                  Identifiers are CamelCased and rewritten to avoid abbreviations and unneccessary prefixes. So eg. VSSSNAPSHOTCONTEXT 
                  becomes VssSnapshotContext, VSSCTXFILESHARE_BACKUP becomes FileShareBackup and so on.
               </para>
            </listItem>
            <listItem>
               <para>
                  Errors are handled by exceptions and not return codes. AlphaVSS provides a full set of exception classes matching 
                  the various possible return codes from the native VSS API.
               </para>
            </listItem>
            <listItem>
               <para>
                  Many methods of the interfaces are changed to avoid out parameters and to use standard .NET constructs instead of the 
                  more clumsy C++ constructs. This should be clear from the API Reference documentation.
               </para>
            </listItem>
         </list>
      </content>
    </section>
     <section>
        <title>Limitations</title>
        <content>
           <para>
              AlphaVSS currently does not provide any support for creating
              <externalLink>
                 <linkText>writers</linkText>
                 <linkUri><![CDATA[http://msdn.microsoft.com/en-us/library/aa384670(VS.85).aspx]]></linkUri>
              </externalLink>
              or
              <externalLink>
                 <linkText>providers</linkText>
                 <linkUri><![CDATA[http://msdn.microsoft.com/en-us/library/aa384664(VS.85).aspx]]></linkUri>
              </externalLink>
              .
           </para>           
        </content>
     </section>
     <relatedTopics>
        <externalLink>
           <linkText>Volume Shadow Copy Service overview on MSDN</linkText>
           <linkUri><![CDATA[http://msdn.microsoft.com/en-us/library/aa384649(VS.85).aspx]]></linkUri>
        </externalLink>
        <externalLink>
           <linkText>Volume Shadow Copy API reference on MSDN</linkText>
           <linkUri><![CDATA[http://msdn.microsoft.com/en-us/library/aa384648(VS.85).aspx]]></linkUri>
        </externalLink>        
     </relatedTopics>
  </developerConceptualDocument>
</topic>