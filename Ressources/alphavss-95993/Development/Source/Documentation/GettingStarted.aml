<?xml version="1.0" encoding="utf-8"?>
<topic id="0914ef63-d2d2-4c5a-906b-3851347852c1" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
       <para>What follows is some basic information to get started using 
       AlphaVSS.</para>
    </introduction>
    <section address="Section1">
      <title>About the files and assemblies</title>
      <content>
         <para>
            There are several assemblies included with AlphaVSS:
         </para>
         <definitionTable>
            <definedTerm><legacyBold>AlphaVSS.Common.dll</legacyBold></definedTerm>
            <definition>
               <para>
                  The platform-independent assembly that you must add a reference to
                  from your application. This assembly contains all platform-independent
                  classes along with the interfaces for the platform specific code and
                  factories to create instances of them.
               </para>
            </definition>
            <definedTerm><legacyBold>AlphaVSS.51.x86.dll</legacyBold></definedTerm>
            <definition>
               <para>
                  Assembly containing the actual implementation of the platform specific
                  interfaces for 32-bit Windows XP.
               </para>
            </definition>
            <definedTerm><legacyBold>AlphaVSS.52.x86.dll</legacyBold></definedTerm>
            <definition>
               <para>
                  Assembly containing the actual implementation of the platform specific
                  interfaces for 32-bit Windows Server 2003.
               </para>
            </definition>
            <definedTerm><legacyBold>AlphaVSS.52.x64.dll</legacyBold></definedTerm>
            <definition>
               <para>
                  Assembly containing the actual implementation of the platform specific
                  interfaces for 64-bit Windows Server 2003 and Windows XP.
               </para>
            </definition>
            <definedTerm><legacyBold>AlphaVSS.60.x86.dll</legacyBold></definedTerm>
            <definition>
               <para>
                  Assembly containing the actual implementation of the platform specific
                  interfaces for 32-bit Windows Vista and Windows Server 2008 and later
                  windows versions.
               </para>
            </definition>
            <definedTerm><legacyBold>AlphaVSS.60.x64.dll</legacyBold></definedTerm>
            <definition>
               <para>
                  Assembly containing the actual implementation of the platform specific
                  interfaces for 64-bit Windows Vista and Windows Server 2008 and later
                  windows versions.
               </para>
            </definition>
         </definitionTable>
        <para>
           Included are both Debug and Release builds of the above assemblies found under
           the directories with the corresponding names.
        </para>
         <para>
            The reason for all these assemblies are that the VSS API differs between
            windows versions, and it is not possible to create a single assembly 
            containing code for all of them. Instead the platform independent 
            assembly <legacyBold>AlphaVSS.Common</legacyBold> contains the code
            neccessary to load the platform specific assembly for the current platform on
            which the application is running.
         </para>
         <para>
            All of the assemblies should be distributed with your application if you 
            want to support all of the above operating systems.
         </para>
         <para>
            All of the assemblies are signed with a strong name, having the public 
            key token <legacyBold>959d3993561034e3</legacyBold>. The strong name are 
            used to refer to the assemblies by the dynamic loading code in
            <codeEntityReference>T:Alphaleonis.Win32.Vss.VssUtils</codeEntityReference>.
            Normally you don't need to be concerned about this, but if you intend
            to build the AlphaVSS library from source code, see 
            <link xlink:href="4d72ab08-78e9-40cf-a85e-3f979540d009" />.
      </para>
      </content>
     </section>
     <section>
        <title>Accessing the main interface</title>
        <content>
           <para>
              The <codeEntityReference>T:Alphaleonis.Win32.Vss.VssUtils</codeEntityReference>
              class is the main static utility class for accessing the platform specific
              instances of the various VSS interfaces in a platform-independent manner.
           </para>
           <para>
              The interface <codeEntityReference>T:Alphaleonis.Win32.Vss.IVssImplementation</codeEntityReference>
              is the main entry point to the AlphaVSS API, providing access to the rest of the
              platform specific interfaces and methods.
           </para>
           <para>
              The simplest way to get started is to use 
              <codeEntityReference>Overload:Alphaleonis.Win32.Vss.VssUtils.LoadImplementation</codeEntityReference>
              to allow AlphaVSS to automatically determine the current operating system,
              load the correct assembly (optionally into a specific AppDomain) and create
              an instance of the correct implementation of 
              <codeEntityReference>T:Alphaleonis.Win32.Vss.IVssImplementation</codeEntityReference>.
           </para>
           <para>
              If you have specific requirements on how the assembly should be loaded,
              or the instance created you are not required to use these methods but can use
              the methods in this class for accessing the suggested assembly name to load,
              and load it manually.
           </para>
           <para>
              In this case you need to create an instance of the class called 
              <codeInline>Alphaleonis.Win32.Vss.VssImplementation</codeInline>
              from the desired platform specific assembly. This class implements 
              the <codeEntityReference>T:Alphaleonis.Win32.Vss.IVssImplementation</codeEntityReference>
              interface, and has a public parameterless constructor.
           </para>           
        </content>
     </section>

     <section>
        <title>About IVssImplementation</title>
        <content>
           <para>
              Once you have an instance of 
              <codeEntityReference>T:Alphaleonis.Win32.Vss.IVssImplementation</codeEntityReference>
              you have access to methods corresponding to the requester specific 
              public functions of the Windows Volume Shadow Copy API. The most important
              of these are undoubtedly 
              <codeEntityReference>T:Alphaleonis.Win32.Vss.IVssImplementation.CreateVssBackupComponents</codeEntityReference>
              corresponding to the 
              <externalLink>
                 <linkText>CreateVssBackupComponents function</linkText>
                 <linkUri><![CDATA[http://msdn.microsoft.com/en-us/library/aa381517(VS.85).aspx]]></linkUri>
              </externalLink> of the native VSS API.
              Call this method to retrieve an instance of the 
              <codeEntityReference>T:Alphaleonis.Win32.Vss.IVssBackupComponents</codeEntityReference> interface 
              (corresponding to the 
              <externalLink>
                 <linkText>native VSS API IVssBackupComponents interface</linkText>
                 <linkUri><![CDATA[http://msdn.microsoft.com/en-us/library/aa382175(VS.85).aspx]]></linkUri>
              </externalLink>.
          </para>
           <para>
              Once you have created an instance of this interface you are ready to start
              using VSS. For more information refer to the 
              <externalLink>
                 <linkText>official VSS documentation from microsoft</linkText>
                 <linkUri><![CDATA[http://msdn.microsoft.com/en-us/library/aa382175(VS.85).aspx]]></linkUri>
              </externalLink>, and the API Reference for AlphaVSS.              
           </para>
           <para>
              Note that most interfaces and classes created in AlphaVSS are disposable and should
              be disposed when no longer needed. Always create instances of these interfaces 
              and classes in a <codeInline>using</codeInline> block to ensure they are correctly
              disposed. See the included samples for an example.
           </para>
        </content>
     </section>
    <relatedTopics>
       <codeEntityReference>T:Alphaleonis.Win32.Vss.VssUtils</codeEntityReference>
       <codeEntityReference>T:Alphaleonis.Win32.Vss.IVssImplementation</codeEntityReference>
       <externalLink>
          <linkText>Official VSS documentation from Microsoft</linkText>
          <linkUri><![CDATA[http://msdn.microsoft.com/en-us/library/bb968832(VS.85).aspx]]></linkUri>
       </externalLink>
    </relatedTopics>
  </developerConceptualDocument>
</topic>