//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18047
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nolte.IO {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Nolte.IO.Filesystem.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AlphaFS Internal Error:
        /// ähnelt.
        /// </summary>
        internal static string AlphaFSInternalError {
            get {
                return ResourceManager.GetString("AlphaFSInternalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Argument must not be empty ähnelt.
        /// </summary>
        internal static string ArgumentMustNotBeEmpty {
            get {
                return ResourceManager.GetString("ArgumentMustNotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Incorrectly implemented function attempting to generate exception from successful operation.
        /// ähnelt.
        /// </summary>
        internal static string AttemptingToGenerateExceptionFromSuccessfulOperation {
            get {
                return ResourceManager.GetString("AttemptingToGenerateExceptionFromSuccessfulOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Buffer is not large enough for the requested operation. ähnelt.
        /// </summary>
        internal static string BufferIsNotLargeEnoughForTheRequestedOperation {
            get {
                return ResourceManager.GetString("BufferIsNotLargeEnoughForTheRequestedOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Count must not be negative. ähnelt.
        /// </summary>
        internal static string CountMustNotBeNegative {
            get {
                return ResourceManager.GetString("CountMustNotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Directory not empty ähnelt.
        /// </summary>
        internal static string DirectoryNotEmpty {
            get {
                return ResourceManager.GetString("DirectoryNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Directory not found ähnelt.
        /// </summary>
        internal static string DirectoryNotFound {
            get {
                return ResourceManager.GetString("DirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error code was: {0} ähnelt.
        /// </summary>
        internal static string ErrorCodeWas0 {
            get {
                return ResourceManager.GetString("ErrorCodeWas0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating hard-links on non-NTFS partitions is not supported ähnelt.
        /// </summary>
        internal static string HardLinksOnNonNTFSPartitionsIsNotSupported {
            get {
                return ResourceManager.GetString("HardLinksOnNonNTFSPartitionsIsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Illegal path: {0} ähnelt.
        /// </summary>
        internal static string IllegalPath0 {
            get {
                return ResourceManager.GetString("IllegalPath0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Incomplete header read. ähnelt.
        /// </summary>
        internal static string IncompleteHeaderRead {
            get {
                return ResourceManager.GetString("IncompleteHeaderRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid directory name ähnelt.
        /// </summary>
        internal static string InvalidDirectoryName {
            get {
                return ResourceManager.GetString("InvalidDirectoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid file name: {0} ähnelt.
        /// </summary>
        internal static string InvalidFileName0 {
            get {
                return ResourceManager.GetString("InvalidFileName0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid handle ähnelt.
        /// </summary>
        internal static string InvalidHandle {
            get {
                return ResourceManager.GetString("InvalidHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid search pattern ähnelt.
        /// </summary>
        internal static string InvalidSearchPattern {
            get {
                return ResourceManager.GetString("InvalidSearchPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid security descriptor returned from system. ähnelt.
        /// </summary>
        internal static string InvalidSecurityDescriptorReturnedFromSystem {
            get {
                return ResourceManager.GetString("InvalidSecurityDescriptorReturnedFromSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid transaction object ähnelt.
        /// </summary>
        internal static string InvalidTransaction {
            get {
                return ResourceManager.GetString("InvalidTransaction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid transaction request ähnelt.
        /// </summary>
        internal static string InvalidTransactionRequest {
            get {
                return ResourceManager.GetString("InvalidTransactionRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The file or directory is not a reparse point ähnelt.
        /// </summary>
        internal static string NotAReparsePoint {
            get {
                return ResourceManager.GetString("NotAReparsePoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset must not be negative. ähnelt.
        /// </summary>
        internal static string OffsetMustNotBeNegative {
            get {
                return ResourceManager.GetString("OffsetMustNotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path already exists ähnelt.
        /// </summary>
        internal static string PathAlreadyExists {
            get {
                return ResourceManager.GetString("PathAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This stream does not support seeking. ähnelt.
        /// </summary>
        internal static string ThisStreamDoesNotSupportSeeking {
            get {
                return ResourceManager.GetString("ThisStreamDoesNotSupportSeeking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transactional conflict ähnelt.
        /// </summary>
        internal static string TransactionalConflict {
            get {
                return ResourceManager.GetString("TransactionalConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transaction already aborted ähnelt.
        /// </summary>
        internal static string TransactionAlreadyAborted {
            get {
                return ResourceManager.GetString("TransactionAlreadyAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transaction already committed ähnelt.
        /// </summary>
        internal static string TransactionAlreadyCommitted {
            get {
                return ResourceManager.GetString("TransactionAlreadyCommitted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transaction not active ähnelt.
        /// </summary>
        internal static string TransactionNotActive {
            get {
                return ResourceManager.GetString("TransactionNotActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Transaction not requested ähnelt.
        /// </summary>
        internal static string TransactionNotRequested {
            get {
                return ResourceManager.GetString("TransactionNotRequested", resourceCulture);
            }
        }
    }
}
